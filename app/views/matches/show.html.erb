<div class="match-show">
  <div class="match-show-container container mt-1">
    <div class="match-show-flex d-flex justify-content-between align-items-center">
      <h1>Partida</h1>
      <!-- <h5 class="match-date"><%= @match.match_date.strftime("%d/%m/%Y %H:%M") %></h5> -->
    </div>
    
    <div class="match-show-card card d-flex justify-content-between align-items-center mb-1">
      <div class="match-show-card-body card-body" data-goal-events="<%= @goal_events.to_json %>">
        <div class="match-row row text-center">
          <div class="col-md-4 col-12">
            <p>Time da Casa</p>
            <div class="mx-2">
              <h3><%= @match.home_team.name %></h3>
            </div>
          </div>
          <div class="match-result col-md-4 col-12">
            <h2 class="mx-1" id="home-score">0</h2>
            <div class="match-time">
              <p id="game-clock">00:00</p>
            </div>
            <h2 class="mx-1" id="away-score">0</h2>
          </div>
          <div class="col-md-4 col-12">
            <p>Time Visitante</p>
            <div class="mx-2">
              <h3><%= @match.away_team.name %></h3>
            </div>
          </div>
        </div>
        
        <div class="row">
          <div class="col-12">
            <div class="notifications-and-results">
              <div id="final-result" class="mt-1">
              </div>
              <div id="goal-notifications" class="mt-1">
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>



<script>
  document.addEventListener('turbo:load', () => {
    const matchSimulation = new MatchSimulation();
    matchSimulation.start();
  });

  document.addEventListener('turbo:before-cache', () => {
    if (window.matchSimulation) {
      window.matchSimulation.clear();
    }
  });

  document.addEventListener('beforeunload', () => {
    if (window.matchSimulation) {
      window.matchSimulation.clear();
    }
  });

  class MatchSimulation {
    constructor() {
      this.interval = null;
      this.running = false;
      this.gameClockElement = document.getElementById('game-clock');
      this.notificationsElement = document.getElementById('goal-notifications');
      this.finalResultElement = document.getElementById('final-result');
      this.homeScoreElement = document.getElementById('home-score');
      this.awayScoreElement = document.getElementById('away-score');
      this.matchCardBody = document.querySelector('.match-show-card-body');
      this.goalEvents = JSON.parse(this.matchCardBody.dataset.goalEvents);
      this.shownGoals = new Set();
      this.homeScore = 0;
      this.awayScore = 0;
      this.gameSeconds = 0;
      this.gameDurationInMinutes = 90;
      this.gameSpeedMultiplier = 10;
    }

    clear() {
      if (this.interval) {
        clearInterval(this.interval);
        this.interval = null;
      }
      this.running = false;
    }

    start() {
      if (this.running) return;

      if (!this.validateElements()) return;

      this.resetSimulation();
      this.running = true;
      window.matchSimulation = this;

      this.interval = setInterval(() => this.updateSimulation(), 10 / this.gameSpeedMultiplier);
    }

    validateElements() {
      const elements = [this.gameClockElement, this.notificationsElement, this.matchCardBody,
                       this.homeScoreElement, this.awayScoreElement, this.finalResultElement];

      if (elements.some(el => !el)) {
        console.error("Um ou mais elementos do DOM para a simulação da partida não foram encontrados.");
        return false;
      }
      return true;
    }

    resetSimulation() {
      this.notificationsElement.innerHTML = '';
      this.finalResultElement.innerHTML = '';
      this.homeScoreElement.textContent = '0';
      this.awayScoreElement.textContent = '0';
      this.gameClockElement.textContent = '00:00';
      this.shownGoals.clear();
      this.homeScore = 0;
      this.awayScore = 0;
      this.gameSeconds = 0;
    }

    updateSimulation() {
      this.gameSeconds++;
      const currentMinute = Math.floor(this.gameSeconds / 60);
      const currentSecondInMinute = this.gameSeconds % 60;

      this.gameClockElement.textContent = `${String(currentMinute).padStart(2, '0')}:${String(currentSecondInMinute).padStart(2, '0')}`;

      this.checkGoals(currentMinute);

      if (currentMinute >= this.gameDurationInMinutes) {
        this.endSimulation();
      }
    }

    checkGoals(currentMinute) {
      this.goalEvents.forEach((goal, index) => {
        if (currentMinute === goal.minute && !this.shownGoals.has(index)) {
          this.displayGoal(goal);
          this.shownGoals.add(index);
        }
      });
    }

    displayGoal(goal) {
      const notification = document.createElement('p');
      notification.innerHTML = `<strong>GOL!</strong> ${goal.team_name} marcou aos ${goal.minute}'.`;
      notification.classList.add('goal-alert');
      this.notificationsElement.prepend(notification);

      if (goal.type === 'home') {
        this.homeScore++;
        this.homeScoreElement.textContent = this.homeScore;
      } else {
        this.awayScore++;
        this.awayScoreElement.textContent = this.awayScore;
      }
    }

    endSimulation() {
      this.clear();
      this.gameClockElement.textContent = "90:00";

      <% if @match.winner %>
        const winnerMessage = document.createElement('p');
        winnerMessage.innerHTML = `<strong>Vencedor:</strong> <%= j @match.winner.name %>`;
        this.finalResultElement.appendChild(winnerMessage);
      <% else %>
        const drawMessage = document.createElement('p');
        drawMessage.innerHTML = `<strong>Resultado:</strong> Empate`;
        this.finalResultElement.appendChild(drawMessage);
      <% end %>

      const endMessage = document.createElement('p');
      endMessage.innerHTML = "<strong>Histórico de Partidas</strong>";
      endMessage.classList.add('clickable-end-game');
      this.finalResultElement.prepend(endMessage);

      endMessage.addEventListener('click', () => {
        window.location.href = "<%= team_matches_path(@match.home_team.user ? @match.home_team : @match.away_team) %>";
      });
    }
  }
</script>